0:00:00.620,0:00:05.700
Sziasztok, Andrew Van Slaars vagyok, és ez egy bemutatkozó videó a RiotJS-hez, ami

0:00:05.700,0:00:11.180
egy pehelykönnyű, React-szerű UI rendszer, amivel egyéni HTML elemeket (TAG) lehet készíteni.

0:00:12.580,0:00:15.000
Ebben a videóban bemutatjuk, hogy

0:00:17.020,0:00:20.240
hogyan installáljuk és futtassuk a Riot-ot az oldalainkon

0:00:21.540,0:00:24.020
hogyan készítsünk és fordítsunk egyéni TAG-eket

0:00:25.160,0:00:29.480
hogyan küldjünk és használjunk adatot a TAG-ünkben

0:00:30.160,0:00:34.960
és hogyan kommunikáljunk egy egyszerű form-on keresztül a felhasználóval

0:00:36.400,0:00:40.160
mielőtt belekezdenénk, állítsuk be az alapokat

0:00:40.560,0:00:42.960
az enyém így néz ki

0:00:42.960,0:00:48.620
én Atom-ot használok, de te nyugodtan használhatsz bármi mást amivel programozni szoktál

0:00:48.620,0:00:53.280
csináltam egy főkönyvtárat a project-nek, ahová az Atom alapból mutat

0:00:53.280,0:00:58.460
Van egy nyitott terminál ablakom is a gyökér könyvtárral, es Chrome-ot használok.

0:00:58.460,0:00:59.980
Most láthatjuk a munkánk eredményét.

0:01:00.660,0:01:04.040
Állítsunk be egy-két dolgot, és már mehetünk is a kódhoz.

0:01:04.040,0:01:08.300
A Node-nak fel kell telepítve lennie, hogy az npm-mel telepíthessünk modulokat.

0:01:08.540,0:01:12.940
Ha még nincs telepítve, akkor a nodejs.org oldal leírasa alapjan telepítsuk.

0:01:12.940,0:01:15.080
A zöld INSTALL gombra kell kattintani. 

0:01:15.940,0:01:18.660
Telepítsünk néhány node modult az npm-mel!

0:01:19.380,0:01:26.180
Először installáljuk a Riot CLI programját az `npm install -g riot` paranccsal

0:01:26.720,0:01:30.480
ezzel fogjuk tudni az egyedi TAG-eket lefordítani

0:01:31.480,0:01:35.400
egy egyszerű HTTP szervert fogunk használni az oldalak megjelenítéséhez

0:01:35.640,0:01:37.560
egyszerűen csak írjuk be

0:01:37.960,0:01:42.980
npm install -g http-server

0:01:45.380,0:01:48.100
és ha még nincs beállítva a bower

0:01:49.080,0:01:52.440
akkor azt is adjuk hozzá, `npm install -g bower`

0:01:55.880,0:02:02.520
most hogy így minden megvan, lehet a riot file-okat hozzáadni a `bower install riot` paranccsal

0:02:02.520,0:02:07.640
láthatjuk, hogy most már van egy bower_components könyvtárunk is

0:02:08.180,0:02:11.300
Most már használhatjuk a riot js fájlokat.

0:02:15.500,0:02:22.500
most, hogy minden file-unk a helyén van, pillantsunk rá az első HTML file-ra amivel kezdeni fogunk

0:02:23.580,0:02:25.980
amint látni, ez csak egy sima HTML oldal

0:02:25.980,0:02:28.080
itt van a fejléc, ami statikus

0:02:28.100,0:02:33.860
és itt van egy script ami a riot.min.js file-ra mutat a bowser_components-en belül

0:02:33.860,0:02:38.680
...és van pár üres script tag, amelyekbe a saját kódunkat fogjuk írni.

0:02:38.860,0:02:42.140
indítsuk be a szervert amit pár percre installáltunk

0:02:42.300,0:02:45.380
gépeljük be http-server

0:02:46.740,0:02:48.820
és most hogy már fut a szerverünk

0:02:48.960,0:02:50.920
töltsük be az oldalunkat a böngészőbe

0:02:51.500,0:02:53.660
most már be kell töltődnie az oldalunknak.

0:02:53.660,0:02:58.360
futni hagyom a web szervert, és nyitok egy újabb fület a konzolban,

0:02:58.360,0:03:01.500
azért, hogy ha majd oda jutunk, akkor tudjuk hol futtatni a parancsainkat.

0:03:02.180,0:03:05.380
Kezdetnek hozzuk létre az első saját tag-ünket.

0:03:05.380,0:03:11.620
Először létre kell hoznunk egy fájlt, amely majd a tag definíciókat tartalmazza, tehát hozzáadom ezt a tags könyvtárhoz.

0:03:17.680,0:03:21.460
A tag-emet hello-world.tag-nek fogom hívni.

0:03:24.920,0:03:29.320
Először készítünk egy wraper-t (becsomagolót) a létrehozni kívánt tag-nek.

0:03:33.200,0:03:38.000
Most, hogy a tag-et tartalmazó fájl kéznél van, adjunk neki valami tartalmat

0:03:41.620,0:03:44.980
Ennyi elég is egy kezdetleges tag definícióhoz.

0:03:49.860,0:03:52.500
A riot tag-ek JavaScript-re fordulnak.

0:03:52.500,0:03:57.400
Van lehetőség arra is, hogy a fordítót is csatoljuk, hogy a fordítás majd a böngészőben történjen...

0:03:57.720,0:03:59.240
...de ezekhez a példákhoz...

0:03:59.480,0:04:01.880
előre lefordítjuk a tag-et.

0:04:02.360,0:04:06.440
A fordításhoz a riot CLI-t fogjuk használni, amit korábban az npm-mel (Node Package Manager) telepítettünk. 

0:04:07.140,0:04:09.860
Először begépeljük a riot parancsot...

0:04:09.860,0:04:12.400
...majd megmondjuk a riot-nak, hogy mit fordítson le.

0:04:16.960,0:04:20.960
Látni fogjuk, hogy a riot fogta a hello-world.tag fájlunkat...

0:04:21.320,0:04:25.080
...és létrehozott egy hello-world.js fájlt ugyanabban a könyvtárban.

0:04:25.080,0:04:27.960
Nézzük meg a fordítás eredményét.

0:04:30.560,0:04:35.840
A JavaScript fajl csak meghívja a riot által kínált tag metódust.

0:04:36.000,0:04:42.880
Az első argumentum a tag neve, a második string pedig a tag template-jét (sablonját) jelenti.

0:04:42.880,0:04:45.540
A harmadik paraméter egy options paramétert kapó függvény.

0:04:46.180,0:04:48.980
Most kezdjük el használni a tag-ot az oldalunkon.

0:04:49.960,0:04:51.720
Vissza az index.html-hez.

0:04:52.200,0:04:55.960
Kell egy script tag, amely a hello-world.js-re mutat.

0:05:03.520,0:05:05.920
A tag-et hozzá kell adnunk az oldalhoz.

0:05:12.740,0:05:19.700
Végül meg kell hívnunk a mount metódust, amellyel a riot-nak meg lehet mondani, hogy használni akarjuk ezt a tag-et.

0:05:26.240,0:05:28.320
Most, hogy a tag-ünk már definiálva van, 

0:05:28.920,0:05:31.240
a script hivatkozások is a helyükön vannak,

0:05:31.240,0:05:36.560
...és meghívtuk a riot mount metódusát, hogy töltse be a tag-ünket, nézzük meg, hogy mit látunk a böngészőben. 

0:05:38.120,0:05:44.420
Frissítés után a mi tag-ünk "hello world" tartalmát kell látnunk a böngészőben. 

0:05:46.360,0:05:51.700
Készítettünk tehát egy saját tag-et, de az csak statikus tartalmat jelenít meg, így nem túl hasznos.

0:05:51.700,0:05:57.060
Nézzük meg, hogy hogyan tehetnénk a tag-et kicsit érdekesebbé. Adjunk át megjeleníteni való adatot!

0:05:57.820,0:06:03.180
Mondjuk kapjon a tag egy greet nevű tulajdonságot, amiben egy megjelenítendő nevet adunk át.

0:06:03.260,0:06:04.780
Ez a következőképp nézne ki.

0:06:08.840,0:06:13.080
Most már van a tag-nek egy greet attribútuma, és azt az értéket adtam neki, hogy "John".

0:06:13.320,0:06:18.840
Azt akarom, hogy a tag outputja "hello John" legyen "hello world" helyett.

0:06:20.560,0:06:27.200
Ahhoz, hogy használhassuk ezt az értéket a megjelenítéshez, módosítanunk kell a tag fájlt is.

0:06:29.720,0:06:34.860
A hello-world tag fájlban a world szót lecserélem egy kifejezésre

0:06:36.940,0:06:38.740
ez az opts.greet-re hivatkozik.

0:06:38.740,0:06:44.300
Ha még emlélszel, opts a neve annak a paraméternek amit a függvénynek adunk át

0:06:44.600,0:06:48.120
amit a harmadik paraméterként láthattunk a riot tag metódusában

0:06:48.120,0:06:50.200
most hogy hozzáadtuk a kifejezésünket

0:06:50.200,0:06:52.680
nézzük meg, hogy minden fájlunk el van e mentve

0:06:52.940,0:06:54.780
és fordítsuk le a tag-ünket

0:06:54.780,0:07:00.700
lefuttatjuk ugyanazt a riot parancsot mint ezelőtt, hozzáfűzve a tags-hello-world.tag -et

0:07:01.000,0:07:02.940
ez majd lecseréli a javascript file-unkat

0:07:03.700,0:07:07.620
és ha most megnézzük a böngészőben, hello John-t láthatunk

0:07:07.620,0:07:14.420
Na, ilyen könnyű egy tag-nek attribútumot létrehozni és értéket átadni neki. 

0:07:14.420,0:07:18.160
Ezen kívül a riot mount() metódusával is átadhatunk adatot a tag-ünknek.

0:07:18.160,0:07:21.400
ha kitöröljük a greet változót a hello-world tag-ünkből

0:07:23.000,0:07:25.160
és átírjuk a mount függvényünket úgy,

0:07:25.240,0:07:29.160
hogy egy objektumot adunk át aminek van egy greet tulajdonsága

0:07:29.940,0:07:31.780
láthatjuk hogy a tag-ünk a

0:07:32.280,0:07:34.040
hello joe üzenettel fordul le

0:07:35.620,0:07:36.420
és működik

0:07:36.420,0:07:41.600
Vegyük észre, hogy most nem kellett újrafordítanunk, mert a tag definíció nem változott.

0:07:41.600,0:07:44.100
csak másképp adjuk át a paramétert. 

0:07:44.100,0:07:47.840
Most tegyük fel, hogy a két tag-et használni akarjuk az oldalunkon.

0:07:48.380,0:07:50.780
Lemásolom a hello_world tag-et.

0:07:50.900,0:07:52.100
Beillesztem másodiknak.

0:07:52.400,0:07:54.800
Lementem és frissítem a böngészőt...

0:07:55.540,0:07:58.980
...és látjuk is a két "Hello Joe" üzenetet.

0:07:58.980,0:08:03.560
Ha a riot mount-olja a tag-et, akkor minden egyes példánynak átadja a paramétereket

0:08:03.560,0:08:08.560
Ha viszont nem a mount() metóduson adjuk át a paramétereket, hanem minden példánynak saját attribútumokat adunk át, ...

0:08:09.180,0:08:11.500
... akkor különböző értékeket fogunk kapni.

0:08:11.500,0:08:12.580
Próbáljuk ki!

0:08:13.140,0:08:16.340
Kitörlöm a mount()-nak átadott értékeket...

0:08:17.060,0:08:20.500
...és mindegyik tagnak külön-külön adom át a greet attribútum értékét. 

0:08:25.280,0:08:27.600
Újra frissítek...

0:08:27.600,0:08:33.780
...és láthatjuk, hogy mindegyik tag azt az értéket írja ki, amelyiket megkapta. 

0:08:33.780,0:08:37.260
Most tegyük fel, hogy van egy harmadik hello_world példányunk,...

0:08:37.260,0:08:39.660
...de ennek nem adunk át paramétert. 

0:08:44.240,0:08:49.680
Ha megnézzük a böngészőben, akkor a harmadik példány csak "hello"-t mond, név nélkül.

0:08:49.680,0:08:53.160
Ha most visszamegyek és átadok a mount() metódusnak egy objektumot, ...

0:08:53.160,0:08:57.460
..akkor a harmadik tag (amelyik nem kapott paramétert), ezt a paramétert fogja használni. 

0:08:58.200,0:09:01.240
Íme, a harmadik tag "hello Joe"-t ír ki.

0:09:01.240,0:09:03.280
Ezt az értéket a mount() metódustól veszi,...

0:09:03.640,0:09:07.080
... az első két tag pedig a saját attribútumát használja.

0:09:07.080,0:09:12.080
A mount() metódusnak átadott objektum tehát alkalmas arra, hogy default értékeket állitsunk be, ...

0:09:12.080,0:09:15.420
...amit aztán az egyes tagok egyedi attribútumaival felül tudunk bíralni.

0:09:15.440,0:09:22.440
Az adatok megjelenítése ugyan hasznos dolog, de interaktív alkalmazásokhoz felhasználói input kezelése is szükséges.

0:09:22.440,0:09:25.540
Hozzunk létre egy tag-et, amely egy formot készit.

0:09:26.260,0:09:28.660
A nagyon egyszerű hello-world témánál maradva...

0:09:28.660,0:09:34.040
...letrehozunk egy tag-et, amelyben a felhasználó megadhatja az üdvözlendő személy nevet egy input mezőben. 

0:09:34.780,0:09:36.540
Hozzunk letre egy új tag fájlt.

0:09:42.220,0:09:44.540
Hívjuk helloform.tag-nek, ...

0:09:49.680,0:09:53.600
... a tag neve pedig legyen hello-form.

0:09:57.040,0:10:02.800
A hello-form tag-en belül szükségünk lesz egy form-ra, amit a szokásos HTML módon tudunk megadni...

0:10:05.640,0:10:08.120
...és hozzáadunk egy egyszerű input mezőt. 

0:10:12.420,0:10:13.940
Adjunk neki nevet:

0:10:16.580,0:10:17.080
legyen "greet".

0:10:21.320,0:10:24.760
Ahhoz, hogy a form-ot el lehessen küldeni, adjunk hozzá egy submit gombot is.

0:10:30.860,0:10:35.800
A form elküldésekor pedig azt akarjuk, hogy a megadott szöveg jelenjen meg az üzenetben.

0:10:37.420,0:10:38.860
Adjunk hozzá egy üzenetet.

0:10:42.280,0:10:46.040
Szükségünk lesz egy kifejezésre, amelybe a nevet elhelyezhetjük.

0:10:49.680,0:10:53.200
Most meg kell adnunk a formunk action-jét...

0:10:53.200,0:10:54.960
...mert most még semmit sem csinál...

0:10:56.580,0:11:03.580
...majd meg kell adnunk a leképezést a hello inputja és a this.greeting változó között, amit ideirunk a kifejezésbe. 

0:11:03.580,0:11:07.420
Ehhez a tag-ünk végéhez hozzáadunk néhány script tag-et...

0:11:09.920,0:11:16.320
...és a script tag-ek belsejében meg fogok adni egy függvényt, ami a form eseménykezelőjeként fog működni. 

0:11:21.300,0:11:27.540
Ebben a függvényben a greet-ben kapott értéket átmásolom a this.greeting-be.

0:11:31.860,0:11:36.500
Most pedig ezt a függvényt hozzá kell rendelnem a form-hoz, mint az ő submit handler-e.

0:11:41.920,0:11:45.840
Most hogy a tag-ünk kész, le kell, hogy fordítsuk hogy végül hozzáadhassuk az oldalunkhoz

0:11:45.900,0:11:48.300
Mivel több tag file-unk is van

0:11:48.300,0:11:53.620
nézzünk meg egy módszert arra, hogyan fordíthatjuk le ezeket egyetlen javascript file-ra

0:11:53.640,0:11:58.680
Amikor a riot paranccsal a tag-ünket fordítjuk, az első paraméter a forrás

0:11:58.920,0:12:01.080
elég csak a könyvtárnevet megadni

0:12:01.080,0:12:06.740
és a riot javascript-re fordítja az összes file-t abban a könyvtárban

0:12:06.740,0:12:10.460
tehát futtassuk le a riot parancsot a tags könyvtáron

0:12:12.400,0:12:19.400
második paraméterként pedig megadom a kimeneti javascript file-t, így az összes tag egy file-ban lesz

0:12:20.980,0:12:27.460
és amikor ezt lefuttatom, az összes tag-et a tags könyvtárban javascript-re fordítja

0:12:27.880,0:12:30.120
és a kimenet az all.js-ben lesz

0:12:32.040,0:12:34.760
és majd láthatod, hogy elkészítette az új file-unkat

0:12:35.920,0:12:37.520
meg is nézhetjük

0:12:37.520,0:12:43.980
és észre veheted, hogy a hello form tag tartalmazza a say hello funkciónkat

0:12:45.180,0:12:49.420
most hogy minden tag-ünk egyetlen javascript file-ban van

0:12:49.420,0:12:53.220
frissítsük az index.html file-unkat, hogy az új javascript file-ra mutasson

0:12:58.480,0:13:02.860
Most a frissítés után újra szükségünk lesz arra, hogy hivatkozzunk a tag-re az új oldalon.

0:13:07.800,0:13:10.840
Meg kell mondanunk a riot-nak, hogy mount-olja fel az új tag-ünket.

0:13:16.320,0:13:21.680
Most, hogy ezt megtettük, nézzük meg a böngészőben az új output-ot.

0:13:25.020,0:13:29.740
Látjuk, hogy van egy inpt mező, egy "Say Hello" gomb és...

0:13:29.940,0:13:32.020
... a Hello üzenet eleje. 

0:13:33.840,0:13:35.600
Felvihetek egy értéket a form-ba, 

0:13:38.520,0:13:42.280
és ha elküldöm, akkor frissíti az üzenetet.

0:13:42.280,0:13:46.840
Láthatjuk, hogy az értéket a form-ból vette es kiírta az outputba, 

0:13:46.840,0:13:49.220
mégis otthagyta az input mezőben is. 

0:13:49.220,0:13:50.160
Takarítsuk el onnan. 

0:13:52.600,0:13:54.280
Vissza a tag definícióhoz.

0:13:55.280,0:13:57.360
Módosítom a függvényt, ...

0:13:57.800,0:14:01.820
...hogy ürítse ki a .greet-et. 

0:14:04.900,0:14:06.100
Végül lementem. 

0:14:06.100,0:14:09.440
A változtatás után újra kell fordítani a tag-eket.

0:14:09.440,0:14:12.760
Most mondjuk meg a riot-nak, hogy csak a tags könyvtárat figyelje, ...

0:14:12.760,0:14:17.060
... és minden alkalommal, ha változást észlel, akkor újrafordíttatom vele a javascript-et. 

0:14:19.260,0:14:26.060
Ezt a legutóbb is használt paranccsal tehetjük meg; most a w kapcsolóval bekapcsoljuk a figyelést (watch).

0:14:26.360,0:14:31.560
Lefordítja a tag-eket és láthatjuk, hogy azt mondja, hogy figyel (watching)...

0:14:31.560,0:14:35.120
...minden tag kiterjesztésű fájlra a tags könyvtárban.

0:14:35.120,0:14:39.620
A tag-ünket újrafordítja a változtatásunk miatt. Nézzük meg a böngészőben...

0:14:47.300,0:14:50.180
...nem működik, nézzük meg, hogy miért.

0:14:51.860,0:14:58.340
...OK, azért, mert az üres stringet a greet-hez rendeltem hozzá, pedig a greet.value-hoz kellett volna.

0:14:58.340,0:14:59.600
Frissítsünk...

0:15:01.440,0:15:01.940
... mentsünk...

0:15:01.960,0:15:05.480
...és láthatjuk, hogy a watch újrafordítja a javascript-ünket.

0:15:06.780,0:15:08.460
Frissitem a böngészőt.

0:15:09.120,0:15:10.220
Beírok egy nevet....

0:15:11.580,0:15:13.500
...és frissíti az üzenetemet...

0:15:13.500,0:15:14.800
...és üresíti a beviteli mezőt.

0:15:15.560,0:15:18.600
OK. Ha megnézzük a most létrehozott tag-ünket, ...

0:15:18.600,0:15:25.040
...akkor láthatjuk, hogy ugyanazt csinálja, mint az eredeti hello world tag. 

0:15:25.040,0:15:29.860
Az a jó a riot.js-ben, hogy a tag-okat egymásba is ágyazhatjuk.

0:15:29.860,0:15:33.240
Ezért most ezt a hármat helyettesítem a saját üdvözlésemmel...

0:15:33.700,0:15:36.920
... és átadom neki a hello world tag egy példányát.

0:15:45.260,0:15:48.300
Ha lementem, akkor a watch újrafordítja...

0:15:48.620,0:15:51.480
...és ha visszamegyek a böngészőbe frissiteni, ...

0:15:53.300,0:15:55.940
...akkor átadhatok neki egy új nevet...

0:15:56.560,0:15:57.760
...és működik. 

0:15:57.760,0:16:02.360
De az a szép ebben az egészben, hogy ha megváltoztatom a hello world tag-et, ...

0:16:04.500,0:16:08.340
...mondjuk egy kicsit kisebbre állítjuk, H5-re.

0:16:09.060,0:16:09.920
Lementem...

0:16:10.400,0:16:11.840
...a watch újrafordítja...

0:16:13.480,0:16:20.480
...és ha ráfrissítek, akkor mindehol frissülni fog, ahol a helo world-re hivatkozom, meg a hello form tag belsejében is.

0:16:23.320,0:16:24.920
Továbbra is minden működik.

0:16:24.920,0:16:30.760
Ha csak egy helyen, a hello world-ben módositok valamit, akkor a módosítás mindenhova eljut, ahol használjuk a hello world-ot.

0:16:31.640,0:16:35.000
OK. Még valamit módosítsunk a hello form tag-en. 

0:16:35.220,0:16:36.660
Idejövök...

0:16:37.620,0:16:42.660
...és igazából nem akarom, hogy megjelenjen, ha csak annyit mond, hogy "hello". 

0:16:42.840,0:16:47.480
Ezért ezt elrejtem addig, amig a greeting érteke ki nincs töltve.

0:16:48.680,0:16:51.720
A riot ad egy beépített attributumot, amit show-nak hívnak. 

0:16:53.180,0:16:55.180
Átadhatunk neki egy kifejezést,...

0:16:57.040,0:17:03.200
...ez a kifejezés megvizsgálja a this.greeting-et és ha ez FALSE-szerű (pl: undefined vagy null),...

0:17:03.880,0:17:05.960
...akkor a show elrejti az elemet...

0:17:05.960,0:17:09.000
... ha pedig TRUE-szerű (vagyis meg van adva), ...

0:17:09.840,0:17:12.320
...akkor a hello world megjeleníti az üzenetet. 

0:17:12.320,0:17:13.920
Nézzük meg!

0:17:16.540,0:17:18.220
Frissitem a böngészőt...

0:17:18.760,0:17:21.960
...és látható, hogy a hello már nem jelenik meg. 

0:17:21.960,0:17:23.300
Ha viszont írok ide egy nevet...

0:17:24.940,0:17:26.140
...és elküldöm a form-ot, ...

0:17:26.140,0:17:28.360
... akkor kitölti a this.greeting-et...

0:17:28.360,0:17:30.300
és megjeleníti a hello world tag-et. 

0:17:31.400,0:17:33.720
a tömörség a Riot egyik erőssége

0:17:34.580,0:17:39.700
kis API-ja és file mérete van, így rövid kódot irhatunk

0:17:39.800,0:17:44.120
nézzük meg mégegyszer a tag-ünket és tisztítsuk is le egy kicsit

0:17:46.500,0:17:51.300
a hello world funkciót amit mint esemény kezelőt használok, le lehet rövidíteni

0:17:52.920,0:17:55.600
úgy hogy kitörölöm a function szót

0:17:58.620,0:17:59.900
és a this-t

0:18:00.000,0:18:01.400
és elmentem

0:18:03.380,0:18:04.880
majd lefordul

0:18:04.880,0:18:08.460
amikor frissítem a böngészőt, látom, hogy nem megy

0:18:08.460,0:18:10.300
mert elfelejtettem a zárójeleket

0:18:12.440,0:18:16.940
tehát le tudom rövidíteni a a hello world funkciómat zárójelekkel

0:18:19.180,0:18:20.760
a tag-jeim majd betöltődnek

0:18:22.160,0:18:23.920
és a form-om is működni fog

0:18:23.960,0:18:26.120
még egy dolog amit a riot-tal csinálhatok

0:18:26.540,0:18:28.380
hogy lehagyom a script tag-eket

0:18:31.640,0:18:35.480
amikor ezt lefordítom és frissítem a böngészőt

0:18:35.540,0:18:39.940
figyeld meg, hogy a hello world tag-ek megjelennek és ide is begépelhetem a nevet

0:18:42.560,0:18:44.080
és a form-om még mindig műküdik

0:18:44.540,0:18:47.100
ha megnézzük a lefordított javascript-et

0:18:47.260,0:18:50.940
még úgy is, hogy én lehagytam a this és a keyword funkciót

0:18:51.280,0:18:54.160
a riot fordítója beteszi nekem

0:18:56.740,0:18:59.120
én szeretem a script tag-eket benne

0:19:07.560,0:19:13.320
nekem nagyon tetszik a funkció rövidített szintaktikája, úgyhogy azt így hagyom

0:19:14.440,0:19:16.520
nem csináltunk semmi túl bonyolultat

0:19:16.580,0:19:18.740
de kezdetnek ez jó lesz

0:19:18.740,0:19:23.220
ha valami komolyabbat keresel, több hasonló videót tervezek majd készíteni

0:19:23.220,0:19:26.580
és folyamatosan bővítem ahogy a videók készülnek.

0:19:26.580,0:19:31.000
köszi, hogy megnézted, ha bármi visszajelzésed vagy megjegyzésed lenne, szívesen várom.

0:19:31.000,0:19:32.260
Fordították: Halmai Csongor és Méhész Imre
